{
	"env": {
		"prefix": "env",
		"body": [
			"#!/usr/bin/env bash",
			"$0"
		],
		"description": "Set env to bash"
	},
	"bash": {
		"prefix": "bash",
		"body": [
			"#!/bin/bash",
			"$0"
		],
		"description": "Set bash shell"
	},
	"sh": {
		"prefix": "sh",
		"body": [
			"#!/bin/sh",
			"$0"
		],
		"description": "Set shell to sh"
	},
	"source file header-GPLv3": {
		"prefix": "gpl",
		"body": [
			"###############################################################################",
			"# ",
			"#  Name: ${1:onsokumaru}",
			"#  Email: ${2:11082686+onsokumaru@users.noreply.github.com}",
			"#  Date: $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE",
			"#  File: $TM_FILENAME",
			"#  License: GPL v3.0",
			"#  ",
			"#  Copyright ${3:$CURRENT_YEAR} ${4:Mike Furtado}",
			"# ",
			"#  This program is free software: you can redistribute it and/or modify",
			"#  it under the terms of the GNU General Public License as published by",
			"#  the Free Software Foundation, either version 3 of the License, or",
			"#  (at your option) any later version.",
			"# ",
			"#  This program is distributed in the hope that it will be useful",
			"#  but WITHOUT ANY WARRANTY; without even the implied warranty of",
			"#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",
			"#  GNU General Public License for more details.",
			"# ",
			"#  You should have received a copy of the GNU General Public License",
			"#  along with this program.  If not, see <http://www.gnu.org/licenses\\>.",
			"# ",
			"###############################################################################",
			"$0"
		],
		"description": "source file header"
	},
	"single line comment ": {
		"prefix": "com",
		"body": [
			"# ${1:comment} ",
			"$0"
		],
		"description": "single line comment"
	},
	"TODO": {
		"prefix": "todo",
		"body": [
			"# TODO -- ${1:description} -- $CURRENT_DAY_NAME_SHORT $CURRENT_DATE $CURRENT_MONTH_NAME_SHORT $CURRENT_YEAR",
			"$0"
		],
		"description": "TODO"
	},
	"Variable": {
		"prefix": "var",
		"body": [
			"${1:VARIABLE}=${2:VALUE}",
			"$0"
		],
		"description": "create variable"
	},
	"Array": {
		"prefix": "arr",
		"body": [
			"${1:ARRAY}=(\"${2:VALUE}\", \"${3:VALUE}\", \"${4:VALUE}\")",
			"$0"
		],
		"description": "create array"
	},
	"Function": {
		"prefix": "fun",
		"body": [
			"${1:Function} (${2:ARG}) {",
			"	${3:Body}",
			"}$0"
		],
		"description": "create function"
	},
	"Function 2": {
		"prefix": "ffun",
		"body": [
			"function ${1:Function} (${2:ARG}) {",
			"	${3:Body}",
			"}$0"
		],
		"description": "create function 2"
	},
	"if": {
		"prefix": "if",
		"body": [
			"if [ ${1:COND} ]; then ",
			"	${2:Body}",
			"fi"
		],
		"description": "if statement"
	},
	"elif": {
		"prefix": "elif",
		"body": [
			"elif [ ${1:COND} ]; then ",
			"	${2:Body}",
			"$0"
		],
		"description": "elif statement"
	},
	"else": {
		"prefix": "else",
		"body": [
			"else",
			"	${2:Body}",
			"$0"
		],
		"description": "else statement"
	},
	"for in": {
		"prefix": "fori",
		"body": [
			"for ${1:i} in ${2:stuff}; do",
			"	${3:Body}",
			"done$0"
		],
		"description": "for i in loop"
	},
	"for n": {
		"prefix": "forn",
		"body": [
			"for (( ${2:i} = 0; ${2:i} < ${1:count}; ${2:i}++ )); do",
			"	${3:Body}",
			"done$0"
		],
		"description": "for i in loop"
	},














	// Place your snippets for shellscript here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	
}